<?php
class Install_model extends CI_Model
{
    function __construct()
    {
        // Call the Model constructor
        parent::__construct();

		// check all required sql functions exist
		$this->create_sql_functions();

		// drop all tables if ?drop is set in the address bar
		if(isset($_GET['drop'])) {
			$this->drop_tables();
		}

		// check all tables one by one and fill them with content if necessary
		$this->create_users_table();
		$this->create_users_data_table();
		$this->create_language_table();
		$this->create_news_table();
		$this->create_news_translation_table();
		$this->create_news_sticky_table();
		$this->create_groups_table();
		$this->create_groups_descriptions_table();
		$this->create_groups_year_table();
		$this->create_users_groups_year_table();
		$this->create_groups_year_images_table();
		$this->create_forum_categories_table();
		$this->create_forum_categories_descriptions_table();
		$this->create_forum_topic_table();
		$this->create_forum_reply_table();
		$this->create_forum_reply_guest_table();
		$this->create_privileges_table();
		$this->create_users_privileges_table();
		$this->create_images_table();
		$this->create_documents_table();
		$this->create_document_types_table();
		$this->create_news_images_table();
		$this->create_page_table();
		$this->create_page_content_table();

		// check all views exist
		$this->create_forum_categories_descriptions_language_view();
		$this->create_news_translation_language_view();
		$this->create_groups_descriptions_language_view();
		$this->create_page_content_language_view();

		// Log a debug message
		log_message('debug', "Install_model Class Initialized");
    }

	function drop_tables() {
		$this->load->dbforge();
		$this->dbforge->drop_table('users');
		$this->dbforge->drop_table('users_data');
		$this->dbforge->drop_table('language');
		$this->dbforge->drop_table('news');
		$this->dbforge->drop_table('news_translation');
		$this->dbforge->drop_table('news_sticky');
		$this->dbforge->drop_table('groups');
		$this->dbforge->drop_table('groups_descriptions');
		$this->dbforge->drop_table('groups_year');
		$this->dbforge->drop_table('groups_year_images');
		$this->dbforge->drop_table('users_groups_year');
		$this->dbforge->drop_table('forum_categories');
		$this->dbforge->drop_table('forum_categories_descriptions');
		$this->dbforge->drop_table('forum_topic');
		$this->dbforge->drop_table('forum_reply');
		$this->dbforge->drop_table('forum_reply_guest');
		$this->dbforge->drop_table('privileges');
		$this->dbforge->drop_table('users_privileges');
		$this->dbforge->drop_table('images');
		$this->dbforge->drop_table('documents');
		$this->dbforge->drop_table('document_types');
		$this->dbforge->drop_table('news_images');
		$this->dbforge->drop_table('page');
		$this->dbforge->drop_table('page_content');
	}

	function create_sql_functions()
	{
		$arr = array();
		$query = $this->db->query("SHOW FUNCTION STATUS");
		foreach($query->result() as $r)
		{
			if($r->Db == $this->db->database)
			{
				$arr[] = $r->Name;
			}
		}
		if(!in_array("get_primary_language_id", $arr))
		{
			$query = $this->db->query("CREATE FUNCTION get_primary_language_id() RETURNS INT(5) RETURN @primary_language_id;");
		}
		if(!in_array("get_secondary_language_id", $arr))
		{
			$query = $this->db->query("CREATE FUNCTION get_secondary_language_id() RETURNS INT(5) RETURN @secondary_language_id;");
		}
	}

	function create_users_table()
	{
		// if the users table does not exist, create it
		if(!$this->db->table_exists('users') || isset($_GET['drop']))
		{
			$this->load->dbforge();
			// the table configurations from /application/helpers/create_tables_helper.php
			$this->dbforge->add_field(get_user_table_fields()); 	// get_user_table_fields() returns an array with the fields
			$this->dbforge->add_key('id',true);						// set the primary keys
			$this->dbforge->create_table('users');
			$q = $this->db->query("ALTER TABLE  `users` ADD UNIQUE (`lukasid`)");
			log_message('info', "Created table: users");

			// inserting users
			$this->load->model("User_model");
			$this->User_model->add_user("Jonas", "Strandstedt", "jonst184", "password");
			$this->User_model->add_user("Emil", "Axelsson", "emiax775", "password");
			$this->User_model->add_user("Kristofer", "Janukiewicz", "krija286", "password");
			$this->User_model->add_user("Anders", "Nord", "andno992", "password");
			$this->User_model->add_user("Jonas", "Zeitler", "jonze168", "password");
			$this->User_model->add_user("Klas", "Eskilson", "klaes950", "password");
			$this->User_model->add_user("Simon", "Joelsson", "simjo407", "password");
			$this->User_model->add_user("Martin", "Kierkegaard", "marki423", "password");
			$this->User_model->add_user("Mikael", "Zackrisson", "mikza835", "password");
			$this->User_model->add_user("Arg", "Mtare", "argmt123", "password");
		}
	}

	function create_users_data_table()
	{
		// if the users_data table does not exist, create it
		if(!$this->db->table_exists('users_data') || isset($_GET['drop']))
		{
			$this->load->dbforge();
			// the table configurations from /application/helpers/create_tables_helper.php
			$this->dbforge->add_field(get_users_data_table_fields()); 	// get_user_table_fields() returns an array with the fields
			$this->dbforge->add_key('users_id',true);						// set the primary keys
			$this->dbforge->create_table('users_data');
			log_message('info', "Created table: users");

			// inserting data
			$data = array('users_id' => 1, 'web' => "http://www.jonasstrandstedt.se", 'presentation' => "Jag heter jonas");
			$this->db->insert('users_data', $data);
			$data = array('users_id' => 5, 'gravatar' => 'jonasemanuelzeitler@gmail.com');
			$this->db->insert('users_data', $data);
			$data = array('users_id' => 6, 'web' => "http://www.klaseskilson.se", 'presentation' => "Jag heter Klas och pillar med den hÃ¤r sidan lite.", 'twitter' => 'Eskilicious', 'gravatar' => 'klas.eskilson@gmail.com');
			$this->db->insert('users_data', $data);
			$data = array('users_id' => 9, 'gravatar' => 'micke.zackrisson@gmail.com');
			$this->db->insert('users_data', $data);
		}
	}

	function create_language_table()
	{
		// if the users table does not exist, create it
		if(!$this->db->table_exists('language') || isset($_GET['drop']))
		{
			$this->load->dbforge();
			// the table configurations from /application/helpers/create_tables_helper.php
			$this->dbforge->add_field(get_language_table_fields()); 	// get_user_table_fields() returns an array with the fields
			$this->dbforge->add_key('id',true);						// set the primary keys
			$this->dbforge->create_table('language');

			log_message('info', "Created table: language");

			// Adding language
			$data = array('language_abbr' => 'se' , 'language_name' => 'Svenska' , 'language_order' => 1);
			$this->db->insert('language', $data);
			$data = array('language_abbr' => 'en' ,'language_name' => 'English' ,'language_order' => 2);
			$this->db->insert('language', $data);
		}
	}

	function create_news_table()
	{
		// if the users table does not exist, create it
		if(!$this->db->table_exists('news') || isset($_GET['drop']))
		{
			$this->load->dbforge();
			// the table configurations from /application/helpers/create_tables_helper.php
			$this->dbforge->add_field(get_news_table_fields()); 	// get_user_table_fields() returns an array with the fields
			$this->dbforge->add_key('id',true);						// set the primary keys
			$this->dbforge->create_table('news');

			log_message('info', "Created table: news");
		}
	}

	function create_news_translation_table()
	{
		// if the users table does not exist, create it
		if(!$this->db->table_exists('news_translation') || isset($_GET['drop']))
		{
			$this->load->dbforge();
			// the table configurations from /application/helpers/create_tables_helper.php
			$this->dbforge->add_field(get_news_translation_table_fields()); 	// get_user_table_fields() returns an array with the fields
			$this->dbforge->add_key('news_id',true);						// set the primary keys
			$this->dbforge->add_key('lang_id',true);						// set the primary keys
			$this->dbforge->create_table('news_translation');

			log_message('info', "Created table: news_translation");

			$this->load->model("News_model");
			$translations = array(
									array("lang" => "se", "title" => "Klistrad nyhet!", "introduction" =>"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur eget eros eu nulla porta fringilla. Morbi facilisis quam at mi dictum vel vestibulum tellus ultrices. Duis et orci neque, sit amet commodo libero. Pellentesque accumsan pharetra justo. Proin eu metus eget leo dapibus volutpat et in dui. Ut risus sapien, commodo id tempor vitae, dignissim at eros. Mauris sit amet sem non justo rutrum feugiat. Mauris semper tincidunt hendrerit.", 
									 "text" => "Lorem [b]ipsum[/b] [i]dolor[/i] sit amet, consectetur adipiscing elit. Curabitur eget eros eu nulla porta fringilla. Morbi facilisis quam at mi dictum vel vestibulum tellus ultrices. Duis et orci neque, sit amet commodo libero. Pellentesque accumsan pharetra justo. Proin eu metus eget leo dapibus volutpat et in dui. Ut risus sapien, commodo id tempor vitae, dignissim at eros. Mauris sit amet sem non justo rutrum feugiat. Mauris semper tincidunt hendrerit."),
									array("lang" => "en", "title" => "Sticky News!", "introduction" =>"Lorizzle bizzle dolor bow wow wow amizzle, consectetuer adipiscing boom shackalack. Nullizzle sapien velizzle, shiz volutpizzle, pizzle quizzle, gravida vizzle, arcu. Pellentesque eget tortor. Sed eros. Fusce sizzle dolor dapibizzle shiz tempus sheezy. Maurizzle pellentesque funky fresh izzle turpizzle. You son of a bizzle shut the shizzle up doggy. Bow wow wow my shizz rhoncizzle crazy. In you son of a bizzle ma nizzle platea dictumst. Shut the shizzle up tellivizzle. Curabitur tellizzle tellivizzle, dawg pimpin', mattizzle ac, eleifend bizzle, nunc. Break it down suscipit. Integizzle sempizzle away sizzle my shizz.",
									 "text" => "Lorizzle bizzle dolor bow wow wow amizzle, consectetuer adipiscing boom shackalack. Nullizzle sapien velizzle, shiz volutpizzle, pizzle quizzle, gravida vizzle, arcu. Pellentesque eget tortor. Sed eros. Fusce sizzle dolor dapibizzle shiz tempus sheezy. Maurizzle pellentesque funky fresh izzle turpizzle. You son of a bizzle shut the shizzle up doggy. Bow wow wow my shizz rhoncizzle crazy. In you son of a bizzle ma nizzle platea dictumst. Shut the shizzle up tellivizzle. Curabitur tellizzle tellivizzle, dawg pimpin', mattizzle ac, eleifend bizzle, nunc. Break it down suscipit. Integizzle sempizzle away sizzle my shizz."),
								);
			$this->News_model->add_news(1, $translations, "2012-01-06");
			$this->News_model->add_news(1, array("lang_abbr" => "se", "title" => "Bilder", "introduction" =>"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur eget eros eu nulla porta fringilla. Morbi facilisis quam at mi dictum vel vestibulum tellus ultrices. Duis et orci neque, sit amet commodo libero. Pellentesque accumsan pharetra justo. Proin eu metus eget leo dapibus volutpat et in dui. Ut risus sapien, commodo id tempor vitae, dignissim at eros. Mauris sit amet sem non justo rutrum feugiat. Mauris semper tincidunt hendrerit.",
				"text" => "[img align=left id=5124141247590 w=150 h=100]Lorem [b]ipsum[/b] [i]dolor[/i] sit amet, consectetur adipiscing elit. Curabitur eget eros eu nulla porta fringilla. Morbi facilisis quam at mi dictum vel vestibulum tellus ultrices. Duis et orci neque, sit amet commodo libero. Pellentesque accumsan pharetra justo. Proin eu metus eget leo dapibus volutpat et in dui. Ut risus sapien, commodo id tempor vitae, dignissim at eros. Mauris sit amet sem non justo rutrum feugiat. Mauris semper tincidunt hendrerit.

[img align=right id=5124141247590 w=250 h=200]Lorem [b]ipsum[/b] [i]dolor[/i] sit amet, consectetur adipiscing elit. Curabitur eget eros eu nulla porta fringilla. Morbi facilisis quam at mi dictum vel vestibulum tellus ultrices. Duis et orci neque, sit amet commodo libero. Pellentesque accumsan pharetra justo http://www.google.se/ . Proin eu metus eget leo dapibus volutpat et in dui. Ut risus sapien, commodo id tempor vitae, dignissim at eros. Mauris sit amet sem non justo rutrum feugiat. Mauris semper tincidunt hendrerit."), "2012-01-06");
			$this->News_model->add_news(1, array("lang_abbr" => "se", "title" => "Utkast!", "introduction" =>"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur eget eros eu nulla porta fringilla. Morbi facilisis quam at mi dictum vel vestibulum tellus ultrices. Duis et orci neque, sit amet commodo libero. Pellentesque accumsan pharetra justo. Proin eu metus eget leo dapibus volutpat et in dui. Ut risus sapien, commodo id tempor vitae, dignissim at eros. Mauris sit amet sem non justo rutrum feugiat. Mauris semper tincidunt hendrerit.",
				"text" => "Ett utkast mtf!"), "2012-10-06", 1);


		}
	}

	function create_news_sticky_table()
	{
		// if the users table does not exist, create it
		if(!$this->db->table_exists('news_sticky') || isset($_GET['drop']))
		{
			$this->load->dbforge();
			// the table configurations from /application/helpers/create_tables_helper.php
			$this->dbforge->add_field(get_news_sticky_table_fields()); 	// get_user_table_fields() returns an array with the fields
			$this->dbforge->add_key('news_id',true);						// set the primary keys
			$this->dbforge->add_key('sticky_order');
			$this->dbforge->create_table('news_sticky');

			log_message('info', "Created table: news_sticky");

			$data = array(
			   'news_id' => 1,
			   'sticky_order' => 1 ,
			);
			$this->db->insert('news_sticky', $data);
		}
	}

	function create_groups_table()
	{
		// if the users table does not exist, create it
		if(!$this->db->table_exists('groups') || isset($_GET['drop']))
		{
			$this->load->dbforge();
			// the table configurations from /application/helpers/create_tables_helper.php
			$this->dbforge->add_field(get_groups_fields()); 	// get_user_table_fields() returns an array with the fields
			$this->dbforge->add_key('id',true);						// set the primary keys
			$this->dbforge->create_table('groups');

			log_message('info', "Created table: groups");

		}
	}

	function create_groups_descriptions_table()
	{
		// if the users table does not exist, create it
		if(!$this->db->table_exists('groups_descriptions') || isset($_GET['drop']))
		{
			$this->load->dbforge();
			// the table configurations from /application/helpers/create_tables_helper.php
			$this->dbforge->add_field(get_groups_descriptions_fields()); 	// get_user_table_fields() returns an array with the fields
			$this->dbforge->add_key('lang_id',true);						// set the primary keys
			$this->dbforge->add_key('groups_id',true);
			$this->dbforge->create_table('groups_descriptions');

			log_message('info', "Created table: groups_descriptions");
		}
	}

	function create_groups_year_table()
	{
		// if the users table does not exist, create it
		if(!$this->db->table_exists('groups_year') || isset($_GET['drop']))
		{
			$this->load->dbforge();
			// the table configurations from /application/helpers/create_tables_helper.php
			$this->dbforge->add_field(get_groups_year_fields()); 	// get_user_table_fields() returns an array with the fields
			$this->dbforge->add_key('id',true);						// set the primary keys
			$this->dbforge->create_table('groups_year');

			log_message('info', "Created table: groups_year");

		}
	}

	function create_users_groups_year_table()
	{
		// if the users table does not exist, create it
		if(!$this->db->table_exists('users_groups_year') || isset($_GET['drop']))
		{
			$this->load->dbforge();
			// the table configurations from /application/helpers/create_tables_helper.php
			$this->dbforge->add_field(get_users_groups_fields()); 	// get_user_table_fields() returns an array with the fields
			$this->dbforge->add_key('user_id',true);						// set the primary keys
			$this->dbforge->add_key('groups_year_id',true);						// set the primary keys
			$this->dbforge->create_table('users_groups_year');

			log_message('info', "Created table: users_groups_year");


			$this->load->model("Group_model");
			$translations = array(
									array("lang" => "se", "name" => "Styrelsen", "description" => "Medietekniksektionen skall bevaka MT-studentens intressen nÃ¤r det gÃ¤ller sÃ¥vÃ¤l studierna som profilering mot nÃ¤ringslivet. HÃ¤r kommer sektionsstyrelsen in i bilden som sektionens verkstÃ¤llande organ. Kontakta oss pÃ¥ info@medieteknik.nu. LÃ¤s mer om vÃ¥ra (association/committee|utskott)"),
									array("lang" => "en", "name" => "The Board", "description" => "The Board is hard."),
								);
			$id = $this->Group_model->add_group($translations);
			$user_list = array(
								array("user_id" => 9, "position" => "Webbchef"),
			);
			$this->Group_model->add_group_year($id, 2011, 2012, $user_list);

			$translations = array(
									array("lang" => "se", "name" => "Webbgruppen", "description" => "Om nÃ¥gra Ã¤r grymma sÃ¥ Ã¤r det webbgruppen"),
									array("lang" => "en", "name" => "Web development group", "description" => "If someone os cruel, then its the spider-web group."),
								);
			$id =$this->Group_model->add_group($translations);

			$user_list = array(
								array("user_id" => 1, "position" => "Coder", "email" => "jonst184@student.liu.se"),
								array("user_id" => 5, "position" => "Ajax master"),
								array("user_id" => 6, "position" => "HTML/CSS Guru"),
			);
			$this->Group_model->add_group_year($id, 2012, 2013, $user_list);
			$user_list = array(
								array("user_id" => 1, "position" => "Coder", "email" => "jonst184@student.liu.se"),
			);
			$this->Group_model->add_group_year($id, 2011, 2012, $user_list);

			$translations = array(
									array("lang" => "se", "name" => "Mette", "description" => "Mette Ã¤r en fÃ¶rening fÃ¶r alla tjejer som studerar Medieteknik pÃ¥ Campus NorrkÃ¶ping. VÃ¥rt mÃ¥l Ã¤r att frÃ¤mja gemenskapen mellan alla tjejer pÃ¥ MT-programmet. Under skolÃ¥ret anordnar vi olika roliga aktiviteter, vissa Ã¤r enbart fÃ¶r MT-tjejer medan andra aktiviteter Ã¤r till fÃ¶r alla som pluggar MT, kille som tjej. Mette Ã¤r Ã¤ven med och anordnar sittningen Ladies Night i mars dÃ¤r alla flickor som vill kan trÃ¤ffas och Ã¤ta god mat och kolla pÃ¥ gycklande pojkar."),
								);
			$id = $this->Group_model->add_group($translations);
			$user_list = array(
								array("user_id" => 1, "position" => "Tjej? Nope."),
			);
			$this->Group_model->add_group_year($id, 2012, 2013, $user_list);

			$translations = array(
									array("lang" => "se", "name" => "Medieteknikdagarna", "description" => "Arbetsmarknadsdagar, se http://www.medieteknikdagarna.se/"),
								);
			$id = $this->Group_model->add_group($translations);
			$user_list = array(
								array("user_id" => 1, "position" => "Projektassistent"),
			);
			$this->Group_model->add_group_year($id, 2010, 2011, $user_list);
		}
	}

	function create_groups_year_images_table()
	{
		// if the users table does not exist, create it
		if(!$this->db->table_exists('groups_year_images') || isset($_GET['drop']))
		{
			$this->load->dbforge();
			// the table configurations from /application/helpers/create_tables_helper.php
			$this->dbforge->add_field(get_groups_year_images_fields()); 	// get_user_table_fields() returns an array with the fields
			$this->dbforge->add_key('groups_year_id',true);						// set the primary keys
			$this->dbforge->add_key('images_id',true);						// set the primary keys
			$this->dbforge->create_table('groups_year_images');

			log_message('info', "Created table: groups_year_images");
		}
	}

	function create_forum_categories_table()
	{
		if(!$this->db->table_exists('forum_categories') || isset($_GET['drop']))
		{
			$this->load->dbforge();
			// the table configurations from /application/helpers/create_tables_helper.php
			$this->dbforge->add_field(get_forum_categories_fields()); 	// get_user_table_fields() returns an array with the fields
			$this->dbforge->add_key('id',true);
			$this->dbforge->create_table('forum_categories');

			log_message('info', "Created table: forum_categories");

			//applicant
			$data = array(
			   'sub_to_id' => 0,
				'guest_allowed' => 1,
				'posting_allowed' => 0,
				'order' => 2,
			);
			$this->db->insert('forum_categories', $data);

			// student
			$data = array(
			   'sub_to_id' => 0,
				'guest_allowed' => 0,
				'posting_allowed' => 0,
				'order' => 1,
			);
			$this->db->insert('forum_categories', $data);

			// ADVERTISEMENT
			$data = array(
			   'sub_to_id' => 0,
				'guest_allowed' => 0,
				'posting_allowed' => 0,
				'order' => 3,
			);
			$this->db->insert('forum_categories', $data);

			// school
			$data = array(
			   'sub_to_id' => 2,
				'guest_allowed' => 0,
				'posting_allowed' => 1,
				'order' => 1,
			);
			$this->db->insert('forum_categories', $data);

			// work and LEISURE
			$data = array(
			   'sub_to_id' => 2,
				'guest_allowed' => 0,
				'posting_allowed' => 1,
				'order' => 2,
			);
			$this->db->insert('forum_categories', $data);

			// buy and sell
			$data = array(
			   'sub_to_id' => 2,
				'guest_allowed' => 0,
				'posting_allowed' => 1,
				'order' => 3,
			);
			$this->db->insert('forum_categories', $data);

			// ACG
			$data = array(
			   'sub_to_id' => 2,
				'guest_allowed' => 0,
				'posting_allowed' => 1,
				'order' => 4,
			);
			$this->db->insert('forum_categories', $data);

			// thesis
			$data = array(
			   'sub_to_id' => 3,
				'guest_allowed' => 0,
				'posting_allowed' => 1,
				'order' => 1,
			);
			$this->db->insert('forum_categories', $data);

			// other services
			$data = array(
			   'sub_to_id' => 3,
				'guest_allowed' => 0,
				'posting_allowed' => 1,
				'order' => 2,
			);
			$this->db->insert('forum_categories', $data);

			// advertisement
			$data = array(
			   'sub_to_id' => 3,
				'guest_allowed' => 0,
				'posting_allowed' => 1,
				'order' => 3,
			);
			$this->db->insert('forum_categories', $data);

			// q&a
			$data = array(
			   'sub_to_id' => 1,
				'guest_allowed' => 1,
				'posting_allowed' => 1,
				'order' => 1,
			);
			$this->db->insert('forum_categories', $data);
		}
	}

	function create_forum_categories_descriptions_table()
	{
		if(!$this->db->table_exists('forum_categories_descriptions') || isset($_GET['drop']))
		{
			$this->load->dbforge();
			// the table configurations from /application/helpers/create_tables_helper.php
			$this->dbforge->add_field(get_forum_categories_descriptions_fields()); 	// get_user_table_fields() returns an array with the fields
			$this->dbforge->add_key('cat_id',true);
			$this->dbforge->add_key('lang_id',true);
			$this->dbforge->create_table('forum_categories_descriptions');

			log_message('info', "Created table: forum_categories_descriptions");

			$data = array(
			   	'cat_id' => 1,
				'lang_id' => 1,
				'title' => 'SÃ¶kande',
				'description' => 'I den hÃ¤r forumdelen kan gÃ¤ster skriva och frÃ¥ga om medieteknikprogrammet.',
			);
			$this->db->insert('forum_categories_descriptions', $data);
			$data = array(
			   	'cat_id' => 1,
				'lang_id' => 2,
				'title' => 'Applicant',
				'description' => 'In this forum guests can post and ask questions about Media Technology',
			);
			$this->db->insert('forum_categories_descriptions', $data);

			$data = array(
			   	'cat_id' => 2,
				'lang_id' => 1,
				'title' => 'Student',
				'description' => 'Detta forum Ã¤r avsett fÃ¶r studenter att prata om allt och inget',
			);
			$this->db->insert('forum_categories_descriptions', $data);
			$data = array(
			   	'cat_id' => 2,
				'lang_id' => 2,
				'title' => 'Student',
				'description' => 'This forum is for students',
			);
			$this->db->insert('forum_categories_descriptions', $data);

			$data = array(
			   	'cat_id' => 3,
				'lang_id' => 1,
				'title' => 'Annonser och jobb',
				'description' => 'HÃ¤r finns alla annonser och jobb samlade',
			);
			$this->db->insert('forum_categories_descriptions', $data);
			$data = array(
			   	'cat_id' => 3,
				'lang_id' => 2,
				'title' => 'Ads and jobs',
				'description' => 'Here is all the ads and jobs',
			);
			$this->db->insert('forum_categories_descriptions', $data);

			$data = array(
			   	'cat_id' => 4,
				'lang_id' => 1,
				'title' => 'Skolan',
				'description' => 'Allt som rÃ¶r kurser, plugg och annat skolreleterat.',
			);
			$this->db->insert('forum_categories_descriptions', $data);
			$data = array(
			   	'cat_id' => 4,
				'lang_id' => 2,
				'title' => 'School',
				'description' => 'All about courses, studying and other school related topics.',
			);
			$this->db->insert('forum_categories_descriptions', $data);

			$data = array(
			   	'cat_id' => 5,
				'lang_id' => 1,
				'title' => 'KÃ¶p & sÃ¤lj',
				'description' => 'KÃ¤nner du att du har fÃ¶r mÃ¥nga prylar? SÃ¤lj Ã¶verflÃ¶det hÃ¤r.',
			);
			$this->db->insert('forum_categories_descriptions', $data);
			$data = array(
			   	'cat_id' => 5,
				'lang_id' => 2,
				'title' => 'Buy & sell',
				'description' => 'Too much stuff? Sell it here',
			);
			$this->db->insert('forum_categories_descriptions', $data);

			$data = array(
			   	'cat_id' => 6,
				'lang_id' => 1,
				'title' => 'Arbete & fritid',
				'description' => 'Om det gÃ¤ller fest, sportande, jobb eller bara allmÃ¤n fritid, skriv hÃ¤r.',
			);
			$this->db->insert('forum_categories_descriptions', $data);
			$data = array(
			   	'cat_id' => 6,
				'lang_id' => 2,
				'title' => 'Work & leisure',
				'description' => 'Partying, partying yeah! Fun fun fun fun!',
			);
			$this->db->insert('forum_categories_descriptions', $data);

			// english only for ACG
			$data = array(
			   	'cat_id' => 7,
				'lang_id' => 2,
				'title' => 'Advanced Computer Graphics',
				'description' => 'This forum is for ACG students and topics about the Master program ACG.',
			);
			$this->db->insert('forum_categories_descriptions', $data);

			$data = array(
			   	'cat_id' => 8,
				'lang_id' => 1,
				'title' => 'Exjobb',
				'description' => 'Annonser om exjobb hÃ¤r',
			);
			$this->db->insert('forum_categories_descriptions', $data);
			$data = array(
			   	'cat_id' => 8,
				'lang_id' => 2,
				'title' => 'Thesis',
				'description' => 'Ads about thesis here',
			);
			$this->db->insert('forum_categories_descriptions', $data);

			$data = array(
			   	'cat_id' => 9,
				'lang_id' => 1,
				'title' => 'Ãvriga tjÃ¤nster',
				'description' => 'Andra jobberbjudanden.',
			);
			$this->db->insert('forum_categories_descriptions', $data);
			$data = array(
			   	'cat_id' => 9,
				'lang_id' => 2,
				'title' => 'Other Services',
				'description' => 'Jobs',
			);
			$this->db->insert('forum_categories_descriptions', $data);

			$data = array(
			   	'cat_id' => 10,
				'lang_id' => 1,
				'title' => 'Ãvriga annonser',
				'description' => 'Annonser',
			);
			$this->db->insert('forum_categories_descriptions', $data);
			$data = array(
			   	'cat_id' => 10,
				'lang_id' => 2,
				'title' => 'Other advertisements',
				'description' => 'Ads',
			);
			$this->db->insert('forum_categories_descriptions', $data);

			$data = array(
			   	'cat_id' => 11,
				'lang_id' => 1,
				'title' => 'FrÃ¥gor & svar',
				'description' => 'Undrar du nÃ¥got om hur det Ã¤r att plugga medieteknik? FrÃ¥ga hÃ¤r.',
			);
			$this->db->insert('forum_categories_descriptions', $data);
			$data = array(
			   	'cat_id' => 11,
				'lang_id' => 2,
				'title' => 'Questions & Answers',
				'description' => 'Have a question about Medie Technology? Ask it here.',
			);
			$this->db->insert('forum_categories_descriptions', $data);

		}
	}

	function create_forum_topic_table()
	{
		if(!$this->db->table_exists('forum_topic') || isset($_GET['drop']))
		{
			$this->load->dbforge();
			// the table configurations from /application/helpers/create_tables_helper.php
			$this->dbforge->add_field(get_forum_topic_fields()); 	// get_user_table_fields() returns an array with the fields
			$this->dbforge->add_key('id',true);
			$this->dbforge->create_table('forum_topic');

			log_message('info', "Created table: forum_topic");

		}
	}

	function create_forum_reply_table()
	{
		if(!$this->db->table_exists('forum_reply') || isset($_GET['drop']))
		{
			$this->load->dbforge();
			// the table configurations from /application/helpers/create_tables_helper.php
			$this->dbforge->add_field(get_forum_reply_fields()); 	// get_user_table_fields() returns an array with the fields
			$this->dbforge->add_key('id',true);
			$this->dbforge->create_table('forum_reply');

			log_message('info', "Created table: forum_reply");

			// inserting users
			$this->load->model("Forum_model");
			$this->Forum_model->create_topic(4, 10, 'Vart fan Ã¤r nya hemsidan?', 'Vad hÃ¥ller webbchefen pÃ¥ med egentligen?', '2013-11-12 19:00:00');

			$this->Forum_model->create_topic(4, 1, 'NÃ¤r bÃ¶rjar det?', 'Hej, jag undrar nÃ¤r Medieteknikdagarna 2012 gÃ¥r av stapeln?
			Det viktiga Ã¤r inte exakt dag utan pÃ¥ ett ungefÃ¤r?

			puss', '2011-12-12 11:00:00');
			$this->Forum_model->create_topic(4, 2, 'LiU is the best.', 'its only a game.', '2011-12-12 12:00:00');
			$this->Forum_model->add_reply(2, 2, 'Det har redan varit.', '2011-12-12 13:00:00');
		}
	}

	function create_forum_reply_guest_table()
	{
		if(!$this->db->table_exists('forum_reply_guest') || isset($_GET['drop']))
		{
			$this->load->dbforge();
			// the table configurations from /application/helpers/create_tables_helper.php
			$this->dbforge->add_field(get_forum_reply_guest_fields()); 	// get_user_table_fields() returns an array with the fields
			$this->dbforge->add_key('id',true);
			$this->dbforge->create_table('forum_reply_guest');

			log_message('info', "Created table: forum_reply_guest");
		}
	}

	function create_privileges_table()
	{
		if(!$this->db->table_exists('privileges') || isset($_GET['drop']))
		{
			$this->load->dbforge();
			// the table configurations from /application/helpers/create_tables_helper.php
			$this->dbforge->add_field(get_privileges_fields()); 	// get_user_table_fields() returns an array with the fields
			$this->dbforge->add_key('id',true);
			$this->dbforge->create_table('privileges');

			log_message('info', "Created table: privileges");

			$data = array(
			   	'privilege_name' => 'superadmin',
				'privilege_description' => 'Full access to everything'
			);
			$this->db->insert('privileges', $data);

			$data = array(
			   	'privilege_name' => 'admin',
				'privilege_description' => 'Allows the user to access the admin menu'
			);
			$this->db->insert('privileges', $data);

			$data = array(
			   	'privilege_name' => 'forum_moderator',
				'privilege_description' => 'Allows user to moderate forum'
			);
			$this->db->insert('privileges', $data);

			$data = array(
			   	'privilege_name' => 'news_post',
				'privilege_description' => 'Allows user to post news, but not approve them'
			);
			$this->db->insert('privileges', $data);

			$data = array(
			   	'privilege_name' => 'news_editor',
				'privilege_description' => 'Allows user to post news, and approve them'
			);
			$this->db->insert('privileges', $data);
		}
	}

	function create_users_privileges_table()
	{
		if(!$this->db->table_exists('users_privileges') || isset($_GET['drop']))
		{
			$this->load->dbforge();
			// the table configurations from /application/helpers/create_tables_helper.php
			$this->dbforge->add_field(get_users_privileges_fields()); 	// get_user_table_fields() returns an array with the fields
			$this->dbforge->add_key('user_id',true);
			$this->dbforge->add_key('privilege_id',true);
			$this->dbforge->create_table('users_privileges');

			log_message('info', "Created table: users_privileges");

			// superadmin
			$data = array('user_id' => 1,'privilege_id' => 1);
			$this->db->insert('users_privileges', $data);
			$data = array('user_id' => 2,'privilege_id' => 1);
			$this->db->insert('users_privileges', $data);
			$data = array('user_id' => 4,'privilege_id' => 1);
			$this->db->insert('users_privileges', $data);
			$data = array('user_id' => 5,'privilege_id' => 1);
			$this->db->insert('users_privileges', $data);
			$data = array('user_id' => 6,'privilege_id' => 1);
			$this->db->insert('users_privileges', $data);
			$data = array('user_id' => 9,'privilege_id' => 1);
			$this->db->insert('users_privileges', $data);

			// news_post
			$data = array('user_id' => 3,'privilege_id' => 4);
			$this->db->insert('users_privileges', $data);
		}
	}

	function create_images_table()
	{
		if(!$this->db->table_exists('images') || isset($_GET['drop']))
		{
			$this->load->dbforge();
			// the table configurations from /application/helpers/create_tables_helper.php
			$this->dbforge->add_field(get_images_fields()); 	// get_user_table_fields() returns an array with the fields
			$this->dbforge->add_key('id',true);
			$this->dbforge->create_table('images');

			log_message('info', "Created table: images");

			//get and insert sample images in db
			$dir = 'user_content/images/original/';
			if ($handle = opendir($dir)) {
				while (false !== ($file = readdir($handle))) {
					if(preg_match('/(.jpg|.png)$/i', $file)){
						$img_size = getimagesize($dir.$file);
						$data = array(	'user_id' => 1,
										'image_original_filename' => $file,
										'width' => $img_size[0],
										'height' => $img_size[1],
										'image_title' => 'news_image',
										'image_description' => 'news_image');
						$this->db->insert('images', $data);
					}
				}
				closedir($handle);
			}

		}
	}

	function create_documents_table() {
		// if the documents table does not exist, create it
		if(!$this->db->table_exists('documents') || isset($_GET['drop']))
		{
			$this->load->dbforge();
			// the table configurations from /application/helpers/create_tables_helper.php
			$this->dbforge->add_field(get_documents_fields()); 	// get_user_table_fields() returns an array with the fields
			$this->dbforge->add_key('id',true);					// set the primary key
			$this->dbforge->create_table('documents');

			log_message('info', "Created table: documents");

			//get and insert sample pdfs in db
			$dir = 'user_content/documents';
			if ($handle = opendir($dir)) {
				while (false !== ($file = readdir($handle))) {
					if(preg_match('/(.pdf)$/i', $file)){
						$data = array(
							'user_id' => 1,
							'type' => 2,
							'document_original_filename' => $file,
							'document_title' => str_replace('.pdf', "", $file),
							'document_description' => 'Document description',
							'group_id' => 1,
							'is_public' => true
						);
						$this->db->insert('documents', $data);
					}
				}
				closedir($handle);
			}
		}
	}

	function create_document_types_table()
	{
		if(!$this->db->table_exists('document_types') || isset($_GET['drop']))
		{
			$this->load->dbforge();
			// the table configurations from /application/helpers/create_tables_helper.php
			$this->dbforge->add_field(get_document_types_fields()); 	// get_user_table_fields() returns an array with the fields
			$this->dbforge->add_key('id',true);
			$this->dbforge->create_table('document_types');

			log_message('info', "Created table: document_types");

			$data = array(
			   	'document_type' => 'protocol',
			);
			$this->db->insert('document_types', $data);

			// $data = array(
			//    	'document_type' => 'protocol_autumn',
			// );
			// $this->db->insert('document_types', $data);

			// $data = array(
			//    	'document_type' => 'protocol_spring',
			// );
			// $this->db->insert('document_types', $data);

			$data = array(
			   	'document_type' => 'directional_document',
			);
			$this->db->insert('document_types', $data);
			
			$data = array(
			   	'document_type' => 'documents_meeting_autumn',
			);
			$this->db->insert('document_types', $data);

			$data = array(
			   	'document_type' => 'documents_meeting_spring',
			);
			$this->db->insert('document_types', $data);			
		}
	}


	function create_news_images_table()
	{
		if(!$this->db->table_exists('news_images') || isset($_GET['drop']))
		{
			$this->load->dbforge();
			// the table configurations from /application/helpers/create_tables_helper.php
			$this->dbforge->add_field(get_news_images_fields()); 	// get_user_table_fields() returns an array with the fields
			$this->dbforge->add_key('news_id',true);
			$this->dbforge->add_key('images_id',true);
			$this->dbforge->create_table('news_images');

			log_message('info', "Created table: news_images");

		}
	}

	function create_page_table()
	{
		if(!$this->db->table_exists('page') || isset($_GET['drop']))
		{
			$this->load->dbforge();
			// the table configurations from /application/helpers/create_tables_helper.php
			$this->dbforge->add_field(get_page_fields()); 	// get_user_table_fields() returns an array with the fields
			$this->dbforge->add_key('id',true);
			$this->dbforge->create_table('page');

			log_message('info', "Created table: page");

		}
	}
	function create_page_content_table()
	{
		if(!$this->db->table_exists('page_content') || isset($_GET['drop']))
		{
			$this->load->dbforge();
			// the table configurations from /application/helpers/create_tables_helper.php
			$this->dbforge->add_field(get_page_content_fields()); 	// get_user_table_fields() returns an array with the fields
			$this->dbforge->add_key('page_id',true);
			$this->dbforge->add_key('lang_id',true);
			$this->dbforge->create_table('page_content');

			log_message('info', "Created table: page_content");

			$this->load->model("Page_model");

			$translations = array(
									array("lang" => "se", "header" => "Sidan finns inte", "content" => "Sidan du fÃ¶rsÃ¶kte nÃ¥ finns inte. Var god rapportera till webbansvarige."),
									array("lang" => "en", "header" => "The page does not exist", "content" => "The page you tried to reach does not exist. Please report to the webmaster."),
								);
			$this->Page_model->add_page("404", $translations, 1);


			$translations = array(
									array("lang" => "se", "header" => "Utbildningen", "content" => "CivilingenjÃ¶r i medieteknik Ã¤r en mÃ¥ngsidig utbildning med tyngdpunkten pÃ¥ teknik fÃ¶r en bransch i stÃ¤ndig fÃ¶rÃ¤ndring. Liksom alla traditionella civilingenjÃ¶rsutbildningar, bestÃ¥r medieteknik av en gedigen grund i matematik och teknik. Styrkan ligger i vÃ¥r unika fÃ¶rmÃ¥ga att vara allsidiga, samtidigt som vi sjÃ¤lva har mÃ¶jligheten att vÃ¤lja vÃ¥r egen profil och utveckla spetskompetens inom visualisering, grafisk teknik, ljud och video.

###HÃ¥rd och mjuk
									Om ni tittar nÃ¤rmare pÃ¥ vÃ¥r logotyp, ser ni att den Ã¤r indelad i en mÃ¶rkare grÃ¥ kub, som stÃ¥r fÃ¶r de tunga tekniska Ã¤mnena samt en mjukare orange, som prÃ¤glas av de mer humanistiskt lagda bitarna av utbildningen, sÃ¥som design, projektledning, interaktion mellan mÃ¤nniska och teknik, osv. Denna kombination av teknik och humaniora Ã¤r en av grundstenarna till Medieteknikutbildningen, sÃ¥vÃ¤l som orsak till dess popularitet hos sÃ¥vÃ¤l fÃ¶retag som gymnasiestudenter.

###Efter plugget
									En utexaminerad medietekniker har en bred och varierad arbetsmarknad och har visat sig vara oumbÃ¤rlig bÃ¥de innanfÃ¶r rikets grÃ¤nser och utanfÃ¶r. Allt ifrÃ¥n filmeffekter i Hollywood, 3D-visualiseringar av rÃ¶ntgenbilder och galaxer, fysiksimuleringar inom spelbranschen, virtuella mÃ¶bler i Ikea-katalogen, IT-konsult och garanterad fÃ¤rgkvalitet i trycksaker. Listan kan gÃ¶ras lÃ¥ng och blir bara lÃ¤ngre och lÃ¤ngre. Allsidighet Ã¤r ett nyckelord som stÃ¤ndigt kommer tillbaka.
									"),
									array("lang" => "en", "header" => "Education", "content" => "Lorizzle bizzle dolor bow wow wow amizzle, consectetuer adipiscing boom shackalack. Nullizzle sapien velizzle, shiz volutpizzle, pizzle quizzle, gravida vizzle, arcu. Pellentesque eget tortor. Sed eros. Fusce sizzle dolor dapibizzle shiz tempus sheezy. Maurizzle pellentesque funky fresh izzle turpizzle. You son of a bizzle shut the shizzle up doggy. Bow wow wow my shizz rhoncizzle crazy. In you son of a bizzle ma nizzle platea dictumst. Shut the shizzle up tellivizzle. Curabitur tellizzle tellivizzle, dawg pimpin', mattizzle ac, eleifend bizzle, nunc. Break it down suscipit. Integizzle sempizzle away sizzle my shizz."),
								);
			$this->Page_model->add_page("about/education", $translations, 1);

			$translations = array(
									array("lang" => "se", "header" => "Medieteknikdagarna", "content" => "Det borde man gÃ¥ pÃ¥. LÃ¤s mer pÃ¥ http://medieteknikdagarna.se/"),
									array("lang" => "en", "header" => "Media Technology Days", "content" => "You should go to it. Read more http://medieteknikdagarna.se/"),
								);
			$this->Page_model->add_page("mtd", $translations, 1);

			/*
			$translations = array(
									array("lang" => "se", "header" => "Utbildningen", "content" => "Lorem [b]ipsum[/b] [i]dolor[/i] sit amet, consectetur adipiscing elit. Curabitur eget eros eu nulla porta fringilla. Morbi facilisis quam at mi dictum vel vestibulum tellus ultrices. Duis et orci neque, sit amet commodo libero. Pellentesque accumsan pharetra justo. Proin eu metus eget leo dapibus volutpat et in dui. Ut risus sapien, commodo id tempor vitae, dignissim at eros. Mauris sit amet sem non justo rutrum feugiat. Mauris semper tincidunt hendrerit."),
									array("lang" => "en", "header" => "Education", "content" => "Lorizzle bizzle dolor bow wow wow amizzle, consectetuer adipiscing boom shackalack. Nullizzle sapien velizzle, shiz volutpizzle, pizzle quizzle, gravida vizzle, arcu. Pellentesque eget tortor. Sed eros. Fusce sizzle dolor dapibizzle shiz tempus sheezy. Maurizzle pellentesque funky fresh izzle turpizzle. You son of a bizzle shut the shizzle up doggy. Bow wow wow my shizz rhoncizzle crazy. In you son of a bizzle ma nizzle platea dictumst. Shut the shizzle up tellivizzle. Curabitur tellizzle tellivizzle, dawg pimpin', mattizzle ac, eleifend bizzle, nunc. Break it down suscipit. Integizzle sempizzle away sizzle my shizz."),
								);
			$this->Page_model->add_page("about/education", $translations, 1);
			*/

			$translations = array(
									array("lang" => "se", "header" => "Kurser", "content" => "Lorem [b]ipsum[/b] [i]dolor[/i] sit amet, consectetur adipiscing elit. Curabitur eget eros eu nulla porta fringilla. Morbi facilisis quam at mi dictum vel vestibulum tellus ultrices. Duis et orci neque, sit amet commodo libero. Pellentesque accumsan pharetra justo. Proin eu metus eget leo dapibus volutpat et in dui. Ut risus sapien, commodo id tempor vitae, dignissim at eros. Mauris sit amet sem non justo rutrum feugiat. Mauris semper tincidunt hendrerit."),
								);
			$this->Page_model->add_page("about/courses", $translations, 1);

			$translations = array(
									array("lang" => "se", "header" => "SÃ¶kande", "content" => "Lorem [b]ipsum[/b] [i]dolor[/i] sit amet, consectetur adipiscing elit. Curabitur eget eros eu nulla porta fringilla. Morbi facilisis quam at mi dictum vel vestibulum tellus ultrices. Duis et orci neque, sit amet commodo libero. Pellentesque accumsan pharetra justo. Proin eu metus eget leo dapibus volutpat et in dui. Ut risus sapien, commodo id tempor vitae, dignissim at eros. Mauris sit amet sem non justo rutrum feugiat. Mauris semper tincidunt hendrerit."),
								);
			$this->Page_model->add_page("about/applicant", $translations, 1);

			$translations = array(
									array("lang" => "en", "header" => "Association", "content" => "Lorizzle (association/board|Styret) bizzle dolor bow wow wow amizzle, consectetuer adipiscing boom shackalack. Nullizzle sapien velizzle, shiz volutpizzle, pizzle quizzle, gravida vizzle, arcu. Pellentesque eget tortor. Sed eros. Fusce sizzle dolor dapibizzle shiz tempus sheezy. Maurizzle pellentesque funky fresh izzle turpizzle. You son of a bizzle shut the shizzle up doggy. Bow wow wow my shizz rhoncizzle crazy. In you son of a bizzle ma nizzle platea dictumst. Shut the shizzle up tellivizzle. Curabitur tellizzle tellivizzle, dawg pimpin', mattizzle ac, eleifend bizzle, nunc. Break it down suscipit. Integizzle sempizzle away sizzle my shizz."),
								);
			$this->Page_model->add_page("association/overview", $translations, 1);

			$translations = array(
									array("lang" => "se", "header" => "Utskott", "content" => "Mycket av den verksamhet som sker inom sektionen sker inom de olika utskott eller grupper som finns i anslutning till sektionen. Dessa grupper leds av respektive styrelsemedlem fÃ¶r just det omrÃ¥det. Men det finns Ã¤ven nÃ¥gra andra som inte Ã¤r direkt kopplade till styrelsen utan snarare till sektionen.

##Styrelseutskott
###Event-utskottet
Event-utskottet har hand om fÃ¶rsÃ¤ljningen i MT-shopen, samt designar och ser till att det finns nya, tuffa produkter. Utskottet har tidigare bl.a.tagit fram en mÃ¶ssa med MT-kuberna pÃ¥ samt ett fint joggingset, hoodie och byxa, med ett otroligt tjusigt MT-mÃ¤rke pÃ¥.

Det Ã¤r Ã¤ven vi som anordnar fÃ¶rSAFT och SAFT (SektionsAktivas FesT) pÃ¥ hÃ¶sten resp. vÃ¥rkanten. Detta Ã¤r mycket trevliga tillstÃ¤llningar dÃ¤r alla sektionsaktiva innom MT fÃ¥r chansen att lÃ¤ra kÃ¤nna varandra.

Utskottet Ã¤r Ã¤ven med och planerar och anordnar sektionspubar pÃ¥ Trappan. Vi fÃ¶rsÃ¶ker Ã¤ven vara pÃ¥ hugget nÃ¤r det gÃ¤ller saker som kan gynna rekryteringen.

###Midsommarphestutskottet
Vi som Ã¤r med i Midsommarphestutskottet ansvarar fÃ¶r att fixa en sÃ¥ bra sittning som mÃ¶jligt fÃ¶r studenterna pÃ¥ Medieteknik. Midsommarphesten Ã¤r en relativt stor sittning med runt 120 sittande och fÃ¶r att den ska bli sÃ¥ bra som mÃ¶jligt krÃ¤vs en hel del jobb, nÃ¥got som oftast ocksÃ¥ Ã¤r vÃ¤ldigt roligt! Bland annat fixar vi ett fint mÃ¤rke, gÃ¶r en affisch, mÃ¥lar ett lakan, kollar priser, bokar lokal, kÃ¶per in allt och organiserar samtidigt som vi i gruppen har trevligt tillsammans.

###NÃ¤ringslivsutskottet
NÃ¤ringslivsutskottet (NLU) skapar nya och tar tillvara pÃ¥ redan tagna kontakter med nÃ¤ringslivet. Det Ã¤r vi som ser till att fÃ¶retaget vet vilka vi Ã¤r och hur bra vi Ã¤r pÃ¥ det vi kan! I Ã¥r har utskottet tagit fram en ny fÃ¶retagsfolder som Ã¤r tÃ¤nkt att fungera som ett informerande komplement till traditionella ansÃ¶kningshandlingar, t ex nÃ¤r man sÃ¶ker examensarbete och jobb. FÃ¶retagsfoldern finns med start i april till fÃ¶rsÃ¤ljning i MT-shoppen. Utskottet har ocksÃ¥ anordnat fÃ¶retagskvÃ¤llar och studiebesÃ¶k hos fÃ¶retag i omrÃ¥det.

###PR- & Medieutskottet
Utskottet jobbar frÃ¤mst med det interna och externa informationsflÃ¶det inom medietekniksektionen. Bland annat genom att se till att medietekniks Lithaniansida fylls med reportage och information samt skapar intressanta MT-relevanta reportage till hemsidan.

###Rekryteringsutskottet
Utskottet jobbar frÃ¤mst med nya och gamla idÃ©er fÃ¶r att Ã¶ka sÃ¶ktrycket till medietekniksprogrammet i NorrkÃ¶ping. Utskottet har bra kontakt med kommunikatÃ¶rerna pÃ¥ skolan och ser till att ha den mest uppdaterade informationen om hemmissioneringen.

Under verksamhetsÃ¥ret 12/13 sÃ¥ jobbar utskottet med tre stÃ¶rre uppgifter:

Medieteknikbroschyren â En broschyr som representanter frÃ¥n utbildningen ska ha mÃ¶jlighet att dela ut vid olika event eller hemmissioneringar. Broschyren ska ha relevant information om just medietekniska programmet i NorrkÃ¶ping.

âDet hÃ¤r Ã¤r MTâ â Ett nyskapat projekt dÃ¤r rekryteringsutskottet har mÃ¶jlighet att skapa ett rekryteringsevent fÃ¶r att synas pÃ¥ gymnasieskolor och basÃ¥r. Eventets syfte Ã¤r att Ã¶ka sÃ¶ktrycket fÃ¶r just medietekniksutbildningen samt se till rÃ¤tt bild av medieteknik syns utÃ¥t.

Medietekniks rekryteringsfilm â Ett nyskapat projekt dÃ¤r filmintresserade studenter pÃ¥ medieteknik skapar en film avsedd fÃ¶r rekrytering inom medietekniksektionen. Filmen ska ocksÃ¥ kunna anvÃ¤ndas pÃ¥ mÃ¤ssor och event fÃ¶r att gÃ¶ra reklam fÃ¶r just medieteknik i NorrkÃ¶ping.


###Webbutskottet
Utskottet ansvarar fÃ¶r utvecklingen av medieteknik.nu sidan, i form av funktionalitet och grafisk utformning. Samt underhÃ¥ll under verksamhetsÃ¥ret och dess innehÃ¥ll.

##Ãvriga grupper
###ArbetsmiljÃ¶ombudet
ArbetsmiljÃ¶ombudets uppgift bestÃ¥r av tvÃ¥ delar; den fysiska och den psykiska arbetsmiljÃ¶n. FÃ¶r den fysiska delen mÃ¶ts alla arbetsmiljÃ¶ombud frÃ¥n sektionerna i NorrkÃ¶ping en gÃ¥ng i mÃ¥naden och uppdateras om vad som hÃ¤nder pÃ¥ fronten. HÃ¤r tas Ã¤ven nya fÃ¶rslag upp som sedan skickas vidare till beslutsorganen. SÃ¥ om du har ett fÃ¶rslag Ã¤r det bara att kontakta mig sÃ¥ fÃ¶r jag vidare det, eller tar kontakt med de parter den gÃ¤ller. Exempel pÃ¥ fysisk arbetsmiljÃ¶ Ã¤r problem med lokaler, framkomlighet m.m. Min roll i den psykiska arbetsmiljÃ¶n Ã¤r att ge rÃ¥d pÃ¥ hur du ska gÃ¥ tillvÃ¤ga med ditt problem rent byrÃ¥kratiskt samt ge direktiv om vem du skall kontakta om du vill prata med nÃ¥gon. Detta gÃ¤ller dÃ¥ trakasserier, mobbing m.m. Mer information om arbetsmiljÃ¶ och arbetsmiljÃ¶ombud hittas pÃ¥ denna sida: https://www.student.liu.se/arbetsmiljo?l=sv

###JÃ¤mstÃ¤lldhetsansvarig
JÃ¤mstÃ¤lldhetsansvarig inom Medietekniksektionen Ã¤r Jenny Yu

###Resultat av jÃ¤mstÃ¤lldhetsformulÃ¤ret
LÃ¤rarformulÃ¤ret[br]
JÃ¤mstÃ¤lldhetsplan 2006

###MTD-gruppen
Ãr gruppen av hÃ¥rt arbetande studenter som ser till att MTs Ã¥rliga branschdag 'Medieteknikdagarna' blir den bÃ¤sta nÃ¥gonsin, Ã¥r efter Ã¥r!

Se mer pÃ¥ http://www.medieteknikdagarna.se/


###Valberedningen
VÃ¤ljs under hÃ¶stmÃ¶tet och har som uppdrag att till vÃ¥rmÃ¶tet lÃ¤gga fram fÃ¶rslag pÃ¥ nÃ¤sta Ã¥rs styrelse."),
								);
			$this->Page_model->add_page("association/committee", $translations, 1);

		}
	}



	function create_forum_categories_descriptions_language_view()
	{
		if(!$this->db->table_exists('forum_categories_descriptions_language') || isset($_GET['drop']))
		{
			$q = "CREATE OR REPLACE VIEW forum_categories_descriptions_language AS (SELECT e.cat_id,e.lang_id,COALESCE(o.title,e.title) as title, COALESCE(o.description,e.description) as description ";
			$q .= " FROM forum_categories_descriptions               e";
			$q .= " LEFT OUTER JOIN forum_categories_descriptions o ON e.cat_id=o.cat_id AND o.lang_id<>e.lang_id AND o.lang_id=get_primary_language_id()";
			$q .= " WHERE (e.lang_id = get_primary_language_id() AND o.lang_id IS NULL) OR (e.lang_id = get_secondary_language_id() AND o.lang_id IS NULL))";
			$this->db->query($q);
		}
	}

	function create_news_translation_language_view()
	{
		if(!$this->db->table_exists('news_translation_language') || isset($_GET['drop']))
		{
			$q = "CREATE OR REPLACE VIEW news_translation_language AS (SELECT e.news_id,e.lang_id,COALESCE(o.title,e.title) as title, COALESCE(o.introduction,e.introduction) as introduction, COALESCE(o.text,e.text) as text, e.last_edit ";
			$q .= " FROM news_translation               e";
			$q .= " LEFT OUTER JOIN news_translation o ON e.news_id=o.news_id AND o.lang_id<>e.lang_id AND o.lang_id=get_primary_language_id()";
			$q .= " WHERE (e.lang_id = get_primary_language_id() AND o.lang_id IS NULL) OR (e.lang_id = get_secondary_language_id() AND o.lang_id IS NULL))";
			$this->db->query($q);
		}
	}

	function create_groups_descriptions_language_view()
	{
		if(!$this->db->table_exists('groups_descriptions_language') || isset($_GET['drop']))
		{
			$q = "CREATE OR REPLACE VIEW groups_descriptions_language AS (SELECT e.groups_id,e.lang_id,COALESCE(o.description,e.description) as description,COALESCE(o.name,e.name) as name ";
			$q .= " FROM groups_descriptions               e";
			$q .= " LEFT OUTER JOIN groups_descriptions o ON e.groups_id=o.groups_id AND o.lang_id<>e.lang_id AND o.lang_id=get_primary_language_id()";
			$q .= " WHERE (e.lang_id = get_primary_language_id() AND o.lang_id IS NULL) OR (e.lang_id = get_secondary_language_id() AND o.lang_id IS NULL))";
			$this->db->query($q);
		}
	}

	function create_page_content_language_view()
	{
		if(!$this->db->table_exists('page_content_language'))
		{
			$q = "CREATE OR REPLACE VIEW page_content_language AS (SELECT e.page_id,e.lang_id,COALESCE(o.header,e.header) as header, COALESCE(o.content,e.content) as content, COALESCE(o.last_edit,e.last_edit) as last_edit  ";
			$q .= " FROM page_content               e";
			$q .= " LEFT OUTER JOIN page_content o ON e.page_id=o.page_id AND o.lang_id<>e.lang_id AND o.lang_id=get_primary_language_id()";
			$q .= " WHERE (e.lang_id = get_primary_language_id() AND o.lang_id IS NULL) OR (e.lang_id = get_secondary_language_id() AND o.lang_id IS NULL))";
			$this->db->query($q);
		}
	}

}

